name: Aider Auto-fix issues and PR comments via external prompt

on:
  issue_comment:
    types: [created]

jobs:
  setup:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'issue_comment' &&
      contains(github.event.comment.body, '/aider') &&
      !contains(github.event.comment.user.login, '[bot]')
    outputs:
      is_pr: ${{ steps.check_pr.outputs.is_pr }}
      pr_head_ref: ${{ steps.checkout_pr.outputs.pr_head_ref }}
      prompt_ready: ${{ steps.determine_prompt.outputs.prompt_ready }}
      issue_title: ${{ steps.extract_issue_info.outputs.issue_title }}
      branch_name: ${{ steps.generate_branch_name.outputs.branch_name }}
    permissions:
      contents: read
      pull-requests: read
      issues: read
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Check if PR comment
        id: check_pr
        run: |
          if [[ ! -z "${{ github.event.issue.pull_request }}" ]]; then
            echo "is_pr=true" >> $GITHUB_OUTPUT
          else
            echo "is_pr=false" >> $GITHUB_OUTPUT
          fi

      - name: Extract comment info
        id: extract_comment
        run: |
          echo '${{ github.event.comment.body }}' > /tmp/raw_comment.txt
          RAW_COMMENT_BODY=$(cat /tmp/raw_comment.txt)
          COMMENT_CONTENT=$(echo "$RAW_COMMENT_BODY" | sed 's|^/aider||' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')
          echo "comment_content=$COMMENT_CONTENT" >> $GITHUB_OUTPUT

      - name: Extract issue info
        id: extract_issue_info
        run: |
          ISSUE_NUMBER="${{ github.event.issue.number }}"
          ISSUE_DETAILS=$(gh issue view $ISSUE_NUMBER --json title,body --repo $GITHUB_REPOSITORY)
          ISSUE_TITLE=$(echo "$ISSUE_DETAILS" | jq -r .title)
          echo "issue_title=$ISSUE_TITLE" >> $GITHUB_OUTPUT
          ISSUE_BODY=$(echo "$ISSUE_DETAILS" | jq -r .body)
          echo "issue_body<<EOF" >> $GITHUB_OUTPUT
          echo "$ISSUE_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Determine PR branch
        id: checkout_pr
        if: steps.check_pr.outputs.is_pr == 'true'
        run: |
          PR_NUMBER=${{ github.event.issue.number }}
          PR_HEAD_REF=$(gh pr view $PR_NUMBER --json headRefName -q .headRefName --repo $GITHUB_REPOSITORY)
          if [[ -z "$PR_HEAD_REF" || "$PR_HEAD_REF" == "null" ]]; then
             echo "::error::Could not determine PR head branch for PR #$PR_NUMBER via gh CLI."
             exit 1
          fi
          echo "pr_head_ref=$PR_HEAD_REF" >> $GITHUB_OUTPUT

      - name: Generate branch name for issue
        id: generate_branch_name
        if: steps.check_pr.outputs.is_pr == 'false'
        run: |
          BRANCH_NAME="aider-fix-issue-${{ github.event.issue.number }}"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Determine Prompt for Aider
        id: determine_prompt
        shell: bash
        run: |
          PROMPT_FILE_PATH=".github/aider/issue-prompt.txt"
          mkdir -p .github/aider

          # Store raw comment body in a file first to avoid shell interpretation issues
          echo '${{ github.event.comment.body }}' > /tmp/raw_comment.txt
          RAW_COMMENT_BODY=$(cat /tmp/raw_comment.txt)
          # Remove the /aider prefix and trim whitespace
          COMMENT_CONTENT=$(echo "$RAW_COMMENT_BODY" | sed 's|^/aider||' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')

          if [[ -z "$COMMENT_CONTENT" ]]; then
            echo "::error::Comment with /aider provided, but no instruction found after it. Cannot proceed."
            echo "prompt_ready=false" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "comment_instruction=$COMMENT_CONTENT" >> $GITHUB_OUTPUT
            echo "prompt_ready=true" >> $GITHUB_OUTPUT
          fi

  aider-common:
    needs: setup
    if: needs.setup.outputs.prompt_ready == 'true'
    uses: ./.github/workflows/aider-common.yaml
    with:
      issue_title: ${{ needs.setup.outputs.issue_title }}
      issue_body: ${{ needs.setup.outputs.issue_body }}
      instruction: ${{ needs.setup.outputs.comment_instruction }}
      prompt_file_path: ".github/aider/issue-prompt.txt"
    secrets: inherit

  handle-pr:
    needs: [setup, aider-common]
    if: needs.setup.outputs.is_pr == 'true' && needs.setup.outputs.prompt_ready == 'true'
    runs-on: ubicloud-standard-8
    permissions:
      contents: write
      pull-requests: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Checkout PR Branch
        run: |
          PR_HEAD_REF="${{ needs.setup.outputs.pr_head_ref }}"
          echo "Checking out PR head branch: $PR_HEAD_REF"
          git fetch origin "refs/heads/${PR_HEAD_REF}:refs/remotes/origin/${PR_HEAD_REF}" --no-tags
          git checkout "$PR_HEAD_REF"
          echo "Successfully checked out branch $(git rev-parse --abbrev-ref HEAD)"

      - name: Commit and Push Changes
        id: commit_and_push
        run: |
          CURRENT_BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          echo "Attempting to push changes to PR branch $CURRENT_BRANCH_NAME for PR #${{ github.event.issue.number }}"
          if git push origin $CURRENT_BRANCH_NAME; then
            echo "Push to $CURRENT_BRANCH_NAME successful (or no new changes to push)."
            echo "changes_applied=true" >> $GITHUB_OUTPUT
          else
            echo "::warning::Push to PR branch $CURRENT_BRANCH_NAME failed."
            echo "changes_applied=false" >> $GITHUB_OUTPUT
          fi

      - name: Comment on PR
        run: |
          PR_NUM="${{ github.event.issue.number }}"
          if [[ "${{ steps.commit_and_push.outputs.changes_applied }}" == "true" ]]; then
            cat > /tmp/pr-comment.md << EOL
          ðŸ¤– I've applied the requested changes with Aider.

          ## Aider Output
          \`\`\`
          $(cat .github/aider/aider-output.txt || echo 'No output available')
          \`\`\`

          Please review the changes and let me know if further adjustments are needed.
          EOL
          else
            cat > /tmp/pr-comment.md << EOL
          ðŸ¤– I attempted to make the requested changes, but no modifications were applied.

          ## Aider Output
          \`\`\`
          $(cat .github/aider/aider-output.txt || echo 'No output available')
          \`\`\`

          Please review the output and provide additional guidance if needed.
          EOL
          fi

          gh pr comment $PR_NUM --body-file /tmp/pr-comment.md

  handle-issue:
    needs: [setup, aider-common]
    if: needs.setup.outputs.is_pr == 'false' && needs.setup.outputs.prompt_ready == 'true'
    runs-on: ubicloud-standard-8
    permissions:
      contents: write
      pull-requests: write
      issues: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and Push Changes
        id: commit_and_push
        env:
          BRANCH_NAME: ${{ needs.setup.outputs.branch_name }}
        run: |
          # Check if branch exists remotely
          if git ls-remote --heads origin $BRANCH_NAME | grep -q $BRANCH_NAME; then
            echo "Branch $BRANCH_NAME already exists remotely, fetching it"
            git fetch origin $BRANCH_NAME
            git checkout $BRANCH_NAME
            git pull origin $BRANCH_NAME
          else
            echo "Creating new branch $BRANCH_NAME"
            git checkout -b $BRANCH_NAME
          fi

          echo "Created/checked out branch $BRANCH_NAME for issue #${{ github.event.issue.number }}"
          git push origin $BRANCH_NAME
          echo "Pushed to branch $BRANCH_NAME"
          echo "pr_branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "changes_applied=true" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: success() && steps.commit_and_push.outputs.pr_branch_name != ''
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_BRANCH: ${{ steps.commit_and_push.outputs.pr_branch_name }}
          ISSUE_NUM: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ needs.setup.outputs.issue_title }}
        run: |
          # Create PR description in a temporary file to avoid command line length limits
          cat > /tmp/pr-description.md << EOL
          This PR was created automatically by Aider to fix issue #${ISSUE_NUM}.

          ## Aider Output
          \`\`\`
          $(cat .github/aider/aider-output.txt || echo "No output available")
          \`\`\`
          EOL

          # Create PR using the file for the body content
          gh pr create \
            --title "[Aider PR] Fix: ${ISSUE_TITLE}" \
            --body-file /tmp/pr-description.md \
            --head "$PR_BRANCH" \
            --base main

      - name: Comment on Issue
        run: |
          ISSUE_NUM="${{ github.event.issue.number }}"
          if [[ "${{ steps.commit_and_push.outputs.changes_applied }}" == "true" ]]; then
            COMMENT_BODY="ðŸ¤– I've created a pull request with the requested changes. You can review it [here]($(gh pr list --head ${{ steps.commit_and_push.outputs.pr_branch_name }} --json url -q '.[0].url'))."
          else
            COMMENT_BODY="ðŸ¤– I attempted to make the requested changes, but no modifications were applied. Please check the action logs for more details."
          fi

          gh issue comment $ISSUE_NUM --body "$COMMENT_BODY"
