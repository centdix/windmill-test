name: Aider Auto-fix PR Review Change Requests

on:
  pull_request_review:
    types: [submitted]

jobs:
  setup:
    if: github.event.review.state == 'changes_requested' && contains(github.event.pull_request.title, '[Aider PR]')
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.extract_pr_info.outputs.pr_number }}
      pr_head_ref: ${{ steps.extract_pr_info.outputs.pr_head_ref }}
      review_prompt: ${{ steps.generate_prompt.outputs.review_prompt }}
    permissions:
      contents: read
      pull-requests: read
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Extract PR Info
        id: extract_pr_info
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT

          PR_HEAD_REF=$(gh pr view $PR_NUMBER --json headRefName -q .headRefName --repo $GITHUB_REPOSITORY)
          if [[ -z "$PR_HEAD_REF" || "$PR_HEAD_REF" == "null" ]]; then
             echo "::error::Could not determine PR head branch for PR #$PR_NUMBER via gh CLI."
             exit 1
          fi
          echo "pr_head_ref=$PR_HEAD_REF" >> $GITHUB_OUTPUT

      - name: Generate Prompt from Review
        id: generate_prompt
        shell: bash
        run: |
          # Get PR review body
          REVIEW_BODY="${{ github.event.review.body }}"

          # Get all PR review comments
          PR_NUMBER="${{ github.event.pull_request.number }}"
          ALL_REVIEW_COMMENTS=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/$GITHUB_REPOSITORY/pulls/$PR_NUMBER/comments \
            | jq '[.[] | {diff_hunk: .diff_hunk, path: .path, body: .body}]')

          REVIEW_PROMPT="Fix the following issues in the PR based on the review feedback. REVIEW: $REVIEW_BODY REVIEW_COMMENTS: $ALL_REVIEW_COMMENTS"

          echo "review_prompt<<EOF" >> $GITHUB_OUTPUT
          echo "$REVIEW_PROMPT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  aider-common:
    needs: setup
    uses: ./.github/workflows/aider-common.yaml
    with:
      request: ${{ needs.setup.outputs.review_prompt }}
      prompt_file_path: ".github/aider/review-prompt.txt"
    secrets: inherit

  apply-changes:
    needs: [setup, aider-common]
    runs-on: ubicloud-standard-8
    permissions:
      contents: write
      pull-requests: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Checkout PR Branch
        run: |
          PR_HEAD_REF="${{ needs.setup.outputs.pr_head_ref }}"
          echo "Checking out PR head branch: $PR_HEAD_REF"
          git fetch origin "refs/heads/${PR_HEAD_REF}:refs/remotes/origin/${PR_HEAD_REF}" --no-tags
          git checkout "$PR_HEAD_REF"
          echo "Successfully checked out branch $(git rev-parse --abbrev-ref HEAD)"

      - name: Commit and Push Changes
        id: commit_and_push
        run: |
          CURRENT_BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          echo "Attempting to push changes to PR branch $CURRENT_BRANCH_NAME for PR #${{ needs.setup.outputs.pr_number }}"

          # Check if there are any changes to commit
          if [[ -z "$(git status --porcelain)" ]]; then
            echo "No changes detected after running Aider."
            echo "has_changes=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Pull latest changes to avoid rejection due to non-fast-forward
          git config pull.rebase true
          git pull origin $CURRENT_BRANCH_NAME

          if git add . && git commit -m "Auto-fix using Aider based on review feedback [skip ci]" && git push origin $CURRENT_BRANCH_NAME; then
            echo "Push to $CURRENT_BRANCH_NAME successful."
            echo "changes_applied=true" >> $GITHUB_OUTPUT
          else
            echo "::warning::Push to PR branch $CURRENT_BRANCH_NAME failed."
            echo "changes_applied=false" >> $GITHUB_OUTPUT
          fi

      - name: Comment on PR
        env:
          PR_NUM: ${{ needs.setup.outputs.pr_number }}
        run: |
          # Create comment body in a temporary file to avoid command line length limits
          if [[ "${{ steps.commit_and_push.outputs.changes_applied }}" == "true" ]]; then
            cat > /tmp/pr-comment.md << EOL
          ðŸ¤– I've automatically addressed the feedback based on the review.

          ## Aider Output
          \`\`\`
          $(cat .github/aider/aider-output.txt || echo 'No output available')
          \`\`\`

          Please review the changes and let me know if further adjustments are needed.
          EOL
          elif [[ "${{ steps.commit_and_push.outputs.has_changes }}" == "false" ]]; then
            cat > /tmp/pr-comment.md << EOL
          ðŸ¤– I analyzed the review feedback, but no changes were needed.

          ## Aider Output
          \`\`\`
          $(cat .github/aider/aider-output.txt || echo 'No output available')
          \`\`\`

          Please review the output and provide additional guidance if needed.
          EOL
          else
            cat > /tmp/pr-comment.md << EOL
          ðŸ¤– I attempted to address the review feedback, but there was an issue applying or pushing the changes.

          ## Aider Output
          \`\`\`
          $(cat .github/aider/aider-output.txt || echo 'No output available')
          \`\`\`

          Please review the output and try again or provide additional guidance.
          EOL
          fi

          # Use the file for comment body
          gh pr comment $PR_NUM --body-file /tmp/pr-comment.md
